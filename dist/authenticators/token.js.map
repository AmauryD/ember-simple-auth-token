{"version":3,"file":"token.js","sources":["../../src/authenticators/token.js"],"sourcesContent":["import EmberObject from '@ember/object';\nimport { getOwner } from '@ember/application';\nimport { Promise, reject, resolve } from 'rsvp';\nimport { isEmpty } from '@ember/utils';\nimport Base from 'ember-simple-auth/authenticators/base';\n\n/**\n  Authenticator that works with token-based authentication like JWT.\n\n  _The factory for this authenticator is registered as `'authenticator:token'` in Ember's container._\n\n  @class Token\n  @namespace SimpleAuth.Authenticators\n  @module ember-simple-auth-token/authenticators/token\n  @extends Base\n*/\nexport default class TokenAuthenticator extends Base {\n  constructor(...args) {\n    super(...args);\n    const owner = getOwner(this);\n    const environment = owner\n      ? owner.resolveRegistration('config:environment') || {}\n      : {};\n    const config = environment['ember-simple-auth-token'] || {};\n    this.serverTokenEndpoint = config.serverTokenEndpoint || '/api/token-auth/';\n    this.tokenPropertyName = config.tokenPropertyName || 'token';\n    this.headers = config.headers || {};\n  }\n\n  /**\n    Restores the session from a set of session properties; __will return a resolving promise when there's a non-empty `token` in the `properties`__ and a rejecting promise otherwise.\n\n    @method restore\n    @param {Object} properties Properties to restore the session from\n    @return {Promise} Promise that when it resolves results in the session being authenticated\n  */\n  restore(properties) {\n    const propertiesObject = EmberObject.create(properties);\n\n    return new Promise((resolve, reject) => {\n      if (!isEmpty(propertiesObject.get(this.tokenPropertyName))) {\n        return resolve(properties);\n      } else {\n        return reject();\n      }\n    });\n  }\n\n  /**\n    Authenticates the session with the specified `credentials`; the credentials are `POST`ed to the [`Authenticators.Token#serverTokenEndpoint`](#SimpleAuth-Authenticators-Token-serverTokenEndpoint) and if they are valid the server returns an auth token in response. __If the credentials are valid and authentication succeeds, a promise that resolves with the server's response is returned__, otherwise a promise that rejects with the server error is returned.\n\n    @method authenticate\n    @param {Object} credentials Credentials to authenticate the session with\n    @param {Object} headers Headers to send with the authentication request\n    @return {Promise} Promise that resolves when an auth token is successfully acquired from the server and rejects otherwise\n  */\n  async authenticate(credentials, headers) {\n    const response = await this.makeRequest(\n      this.serverTokenEndpoint,\n      credentials,\n      {\n        ...this.headers,\n        ...headers,\n      },\n    );\n    return response.json;\n  }\n\n  /**\n    Does nothing\n\n    @method invalidate\n    @return {Promise} Resolving promise\n  */\n  invalidate() {\n    return resolve();\n  }\n\n  /**\n    @method makeRequest\n    @param {String} url Server endpoint\n    @param {Object} data Object that will be sent to server\n    @param {Object} headers Additional headers that will be sent to server\n    @return {Promise} Promise that resolves when the request is successfully and rejects otherwise\n  */\n  async makeRequest(url, data, headers) {\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        ...headers,\n      },\n      body: JSON.stringify(data),\n    }).then((response) => {\n      const res = {\n        statusText: response.statusText,\n        status: response.status,\n        headers: response.headers,\n      };\n\n      return response\n        .text()\n        .then((text) => {\n          res.text = text;\n          try {\n            res.json = JSON.parse(text);\n          } catch (e) {\n            return reject(res);\n          }\n\n          if (response.ok) {\n            return res;\n          } else {\n            return reject(res);\n          }\n        })\n        .catch(() => {\n          return reject(res);\n        });\n    });\n  }\n}\n"],"names":["TokenAuthenticator","Base","constructor","args","owner","getOwner","environment","resolveRegistration","config","serverTokenEndpoint","tokenPropertyName","headers","restore","properties","propertiesObject","EmberObject","create","Promise","resolve","reject","isEmpty","get","authenticate","credentials","response","makeRequest","json","invalidate","url","data","fetch","method","Accept","body","JSON","stringify","then","res","statusText","status","text","parse","e","ok","catch"],"mappings":"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"}